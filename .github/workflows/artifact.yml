name: Create Artifact

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: node_modules
          key: buildCachev20

      - name: Cache
        id: cache2
        uses: actions/cache@v2.1.6
        with:
          path: Mod Manager/node_modules
          key: buildCache2v13

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm install

      - name: Prep
        run: |
          npm install -g pkg typescript tsc-silent

      - name: Build binary
        run: |
          cp -r piscina/ node_modules/piscina
          tsc-silent -p tsconfig.json --suppress @src/discover.ts @src/deploy.ts
          pkg package.json --targets node14-linux-x64 --output Deploy.exe --compress Brotli

      - name: Download RPKG
        uses: aochmann/actions-download-artifact@5709392f11b5937bd316e52687ad87f7deced5f5
        with:
          repo: glacier-modding/RPKG-Tool
          name: rpkg
          latest: true
          path: './Third-Party'

      - name: Download ResourceTool Linux
        uses: aochmann/actions-download-artifact@5709392f11b5937bd316e52687ad87f7deced5f5
        with:
          repo: OrfeasZ/ZHMTools
          name: ResourceTool-linux-x64
          latest: true
          path: './Third-Party'

      - name: Download ResourceTool Windows (rpkg-cli.exe requires this to work)
        uses: aochmann/actions-download-artifact@5709392f11b5937bd316e52687ad87f7deced5f5
        with:
          repo: OrfeasZ/ZHMTools
          name: ResourceTool-win-x64
          latest: true
          path: './Third-Party'

      - name: Install GUI dependencies
        if: steps.cache2.outputs.cache-hit != 'true'
        run: |
          cd "Mod Manager"
          npm install
          cd ../

      - name: Build GUI
        run: |
          cd "Mod Manager"
          npm run build
          cd ../

      - name: Ready for zip
        run: |
          mkdir dist
          mkdir dist/Third-Party
          mkdir dist/Info
          mkdir dist/API
          mkdir "dist/Mod Manager"
          cp -r ./Third-Party ./dist/Third-Party
          cp -r "./For Build" ./dist
          cp -r ./docs ./dist/Info
          cp -r ./compiled/*.d.ts ./dist/API
          cp -r "./Mod Manager/dist/linux-unpacked" "./dist/Mod Manager"
          cp Deploy.exe dist
          echo -e '#!/bin/sh\ncd "Mod Manager"\n./modmanager' > "Mod Manager.sh"
          chmod +x ./Mod\ Manager.sh

      - name: Zip
        uses: TheDoctor0/zip-release@4fb9e4ff72847dd3d1c111cf63834e353ed7cb3d
        with:
          filename: Release.zip
          directory: dist

      - uses: actions/upload-artifact@v2
        with:
          name: Output
          path: dist/Release.zip
